"""Create tables

Revision ID: 085404329cf0
Revises: 
Create Date: 2025-09-02 18:58:21.453262

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '085404329cf0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Full name of the user'),
    sa.Column('email', sa.String(length=255), nullable=False, comment="User's email address"),
    sa.Column('username', sa.String(length=50), nullable=False, comment='Unique username'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='Bcrypt hashed password'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='User creation timestamp'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='Whether the user account is active'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_users_created_at', 'users', ['created_at'], unique=False)
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_username', 'users', ['username'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('composio_connections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('composio_connected_account_id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('composio_connected_account_id')
    )
    op.create_index(op.f('ix_composio_connections_id'), 'composio_connections', ['id'], unique=False)
    op.create_index(op.f('ix_composio_connections_provider'), 'composio_connections', ['provider'], unique=False)
    op.create_index(op.f('ix_composio_connections_user_id'), 'composio_connections', ['user_id'], unique=False)
    op.create_table('openai_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='User ID (one key per user)'),
    sa.Column('encrypted_api_key', sa.String(length=500), nullable=False, comment='Encrypted OpenAI API key'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the API key is active'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Key creation timestamp'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Key update timestamp'),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True, comment='Last time key was used'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_openai_keys_created_at', 'openai_keys', ['created_at'], unique=False)
    op.create_index('idx_openai_keys_is_active', 'openai_keys', ['is_active'], unique=False)
    op.create_index('idx_openai_keys_user_id', 'openai_keys', ['user_id'], unique=False)
    op.create_index(op.f('ix_openai_keys_id'), 'openai_keys', ['id'], unique=False)
    op.create_index(op.f('ix_openai_keys_user_id'), 'openai_keys', ['user_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_openai_keys_user_id'), table_name='openai_keys')
    op.drop_index(op.f('ix_openai_keys_id'), table_name='openai_keys')
    op.drop_index('idx_openai_keys_user_id', table_name='openai_keys')
    op.drop_index('idx_openai_keys_is_active', table_name='openai_keys')
    op.drop_index('idx_openai_keys_created_at', table_name='openai_keys')
    op.drop_table('openai_keys')
    op.drop_index(op.f('ix_composio_connections_user_id'), table_name='composio_connections')
    op.drop_index(op.f('ix_composio_connections_provider'), table_name='composio_connections')
    op.drop_index(op.f('ix_composio_connections_id'), table_name='composio_connections')
    op.drop_table('composio_connections')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_users_username', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_index('idx_users_created_at', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
